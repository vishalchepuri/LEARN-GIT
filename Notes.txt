#Basic GIT COMMANDS:
…or create a new repository on the command line
echo "# now-i-delete" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/vishalchepuri/now-i-delete.git
git push -u origin main
…or push an existing repository from the command line
git remote add origin https://github.com/vishalchepuri/now-i-delete.git
git branch -M main
git push -u origin main
…or import code from another repository
You can initialize this repository with code from a Subversion, Mercurial, or TFS project.


->Install Git bash

git --version -->To check the version of git
git config --> To check the values
git config --global --list -->To get the user details.

git init --> It initializes the git repository and the branch will be master.



git init -b main -->It creates a repository with the main branch.

git add <file-name> -->To add to the local git repository

git rm --cached <file-name> -->To remove a file from staging area.

git commit -m "<message>" -->To commit the file


So when we made the changes first we needed to add that file to the staging area which is the <git add >  command then we needed to commit it.


git log --> To check commits with details


git commit -a -m "without staging" --> If we use -a it goes to the repository without staging

git diff -->It is used to track the changes in files.

git diff --staged -->To get the change in files in the staging area.

git add . -->To add all the files to the staging










git branch -M main --> It creates a new branch name with the main


Instead of HTTPS, we can do SSH so that we can log in only once.
setup details : 
1)ssh-keygen -o -->It generates the Key (press enter two times)
2)now go enter "cd"(this goes to the home directory
3)Now enter "cd .ssh"
4)open id_rsa.pub file using "cat id_rsa.pub"
5)Now go to settings in the git hub click SSH and add the SSH key. 





git remote add origin <git-link> -->It is used to add the remote link

git checkout <branch-name> -->To which branch do we need to push the files to keep that branch name?
git push -u origin main --> It is used to make the files from the local repo to GitHub in main branch(-u means upstream)



git checkout -b <branch-name> or  git switch -c <branch-name>--> To create a branch
git branch --> To list all branches and the branch which has a * it is active and it shows only local branches
git branch --all  --> It shows local and remote branches
git branch - -->It is used to switch to the previous branch

git branch -d <branch-name> -->It is used to delete branch




git merge <branch-name> -->To merge mutliple branches


To go to the previous commit
git reset --hard <commit-ID>
git push -f origin <branch-name>
